# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

# Can't use the top-level "paths" filter because of issues with required checks
# See: https://github.com/orgs/community/discussions/44490#discussioncomment-10253645

name: 'Test: E2E (Portal)'

on:
  workflow_dispatch:
  merge_group:
    types: [checks_requested]
  pull_request:

env:
  e2eTestsPath: './e2e'

jobs:
  path-filter:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.filter.outputs.should_skip }}
    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none # Reduce clone size/speed
          fetch-depth: 0 # Full history is needed to determine the "changed files in this PR"

      - uses: leavesster/pull-request-path-filter@v0.2
        # Other events (from the merge-queue) can safely ignore the path-filter
        if: github.event_name == 'pull_request'
        id: filter
        with:
          paths: |
            - '.github/workflows/test_e2e_portal.yml'
            - 'e2e/**'
            - 'services/.env.example'
            - 'services/**'
            - '!services/**.test.ts'
            - '!services/**.spec.ts'
            - 'interfaces/portal/**'
            - '!interfaces/portal/**.test.ts'
            - '!interfaces/portal/**.spec.ts'
            - '!**.md'

  test-shard:
    runs-on: ubuntu-latest
    needs: path-filter
    if: ${{ needs.path-filter.outputs.should_skip != 'true' }}
    environment: test

    strategy:
      fail-fast: false
      matrix:
        shard: ['1', '2', '3', '4', '5', '6']
        shardCount: ['6']

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version-file: '${{ env.e2eTestsPath }}/.node-version'
          cache: 'npm'
          cache-dependency-path: '${{ env.e2eTestsPath }}/package-lock.json'

      - name: Install E2E-Tests code-dependencies
        working-directory: ${{ env.e2eTestsPath }}
        run: |
          npm ci

      - name: Lint E2E-Tests code
        working-directory: ${{ env.e2eTestsPath }}
        run: 'npm run lint'

      - name: Set ENV-variables for test-environment
        run: |
          cp services/.env.example services/.env

      - name: Run Services with Docker
        run: |
          npm run start:services:ci

      - name: Run Portal
        working-directory: ./interfaces/portal
        env:
          NG_PRODUCTION: true
          NG_URL_121_SERVICE_API: http://localhost:3000/api
          NG_DOWNLOAD_TRANSLATIONS_AT_BUILD: false
        run: |
          npm ci
          cp .env.example .env
          npm run start:debug-production > run-portal-logs.txt 2>&1 &

      - name: Install 121-Service dependencies
        # This step is necessary because the tests run functions in this folder
        working-directory: ./services/121-service
        run: |
          npm install

      - name: Install E2E-Tests runtime-dependencies
        working-directory: ${{ env.e2eTestsPath }}
        run: |
          npx playwright install chromium --with-deps --no-shell

      - name: Wait for Portal
        run: |
          timeout 90s sh -c 'until curl http://localhost:8088 -I; do echo "Waiting for Portal to be running..."; sleep 1; done'

      - name: Run E2E-Tests with Playwright
        working-directory: ${{ env.e2eTestsPath }}
        env:
          BASE_URL: http://localhost:8088
        run: |
          npm test -- --shard=${{ matrix.shard }}/${{ matrix.shardCount }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-result-artifacts-${{ matrix.shard }}
          path: |
            ${{ env.e2eTestsPath }}/test-results/
            ./interfaces/portal/run-portal-logs.txt

      - name: Portal logs
        if: always()
        shell: bash
        run: cat ./interfaces/portal/run-portal-logs.txt

      - name: Docker logs
        if: always()
        uses: jwalton/gh-docker-logs@v2

  # This job is here to make the above jobs "required" in GitHub.
  # This is a workaround for this issue: https://github.com/orgs/community/discussions/44490
  test-shard-resolution-e2e:
    runs-on: ubuntu-latest
    needs: [test-shard]
    if: ${{ always() }}
    steps:
      - name: Required check failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
      - name: Dummy step
        run: echo "All required checks have successfully passed."
