# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: 'Test Service: Unit & Integration Tests'

on:
  workflow_dispatch:
  merge_group:
    types: [checks_requested]
  pull_request:
    paths:
      - .github/workflows/test_service_api_batches.yml
      - services/**
      - '!**.md'

defaults:
  run:
    working-directory: services

jobs:
  test_prep:
    runs-on: ubuntu-latest
    outputs:
      services_version_hash: ${{ steps.services_version.outputs.hash }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Generate version-hash of all services code
        id: services_version
        working-directory: ./
        run: echo "hash=${{ hashFiles('.github/workflows/test_service_api_batches.yml', 'services/**') }}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: test_prep
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set ENV-variables for test-environment
        run: cp .env.example .env

      - name: Restore Docker image from cache
        id: cache-docker-images
        uses: actions/cache@v4
        with:
          path:
            121-service-${{ needs.test_prep.outputs.services_version_hash }}.tar
            mock-service-${{ needs.test_prep.outputs.services_version_hash }}.tar
          key: ${{ needs.test_prep.outputs.services_version_hash }}

      - name: Build Docker image
        if: steps.cache-docker-images.outputs.cache-hit != 'true'
        env:
          COMPOSE_BAKE: true
        run: |
          docker compose --file docker-compose.yml build
          docker save services-121-service:latest -o ../121-service-${{ needs.test_prep.outputs.services_version_hash }}.tar
          docker save services-mock-service:latest -o ../mock-service-${{ needs.test_prep.outputs.services_version_hash }}.tar

  test_batch:
    runs-on: ubuntu-latest
    needs:
      - test_prep
      - build
    strategy:
      matrix:
        batch: ['1/6', '2/6', '3/6', '4/6', '5/6', '6/6']

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set ENV-variables for test-environment
        run: cp .env.example .env

      - name: Restore 121-servoce Docker image from cache
        uses: actions/cache/restore@v4
        with:
          path:
            121-service-${{ needs.test_prep.outputs.services_version_hash }}.tar
            mock-service-${{ needs.test_prep.outputs.services_version_hash }}.tar
          key: ${{ needs.test_prep.outputs.services_version_hash }}

      - name: Load Docker images
        run: |
          docker load -i ../121-service-${{ needs.test_prep.outputs.services_version_hash }}.tar
          docker load -i ../mock-service-${{ needs.test_prep.outputs.services_version_hash }}.tar

      - name: Run Containers with Docker
        run: docker compose --file=docker-compose.yml up --detach --wait --wait-timeout 300 --quiet-pull --no-recreate --no-build

      - name: Check that no new migrations are necessary
        if: ${{ matrix.batch == '6/6' }}
        run: docker compose exec 121-service npm run migration:generate src/migration/irrelevant_file_name -- --check

      - name: Run integration tests with Jest
        run: docker compose exec 121-service npm run test:integration:all -- --shard=${{ matrix.batch }}

      - name: Docker logs
        if: always()
        uses: jwalton/gh-docker-logs@v2

  test:
    runs-on: ubuntu-latest
    needs:
      - test_batch
    steps:
      - name: Finish
        working-directory: ./
        run: echo 'Done?!'
