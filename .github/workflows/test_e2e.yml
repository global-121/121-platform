# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: 'Test: E2E'

on:
  workflow_dispatch:
  pull_request:
    paths:
      - '.github/workflows/test_e2e.yml'
      - 'e2e/**'
      - 'services/.env.example'
      - 'services/**'
      - '!services/**.test.ts'
      - '!services/**.spec.ts'
      - 'interfaces/Portal/**'
      - '!interfaces/Portal/**.test.ts'
      - '!interfaces/Portal/**.spec.ts'
      - '!**.md'

env:
  e2eTestsPath: './e2e'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        partition: [0, 1, 2]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version-file: '${{ env.e2eTestsPath }}/.node-version'
          cache: 'npm'
          cache-dependency-path: '${{ env.e2eTestsPath }}/package-lock.json'

      - name: Install E2E-Tests code-dependencies
        working-directory: ${{ env.e2eTestsPath }}
        run: |
          npm ci --omit=optional --no-fund --no-audit

      - name: Lint E2E-Tests code
        working-directory: ${{ env.e2eTestsPath }}
        run: 'npm run lint'

      - name: Set ENV-variables for test-environment
        run: |
          cp services/.env.example services/.env

      - name: Set up Docker Compose for Partition ${{ matrix.partition }}
        run: |
          mkdir -p ./services/partition-${{ matrix.partition }}
          cp docker-compose.yml ./services/partition-${{ matrix.partition }}/docker-compose.yml
          sed -i 's|version: "3.9"|version: "3.9"\nservices:\n  partition-${{ matrix.partition }}:\n    container_name: partition-${{ matrix.partition }}|' ./services/partition-${{ matrix.partition }}/docker-compose.yml
          sed -i 's|app:|app-${{ matrix.partition }}:|' ./services/partition-${{ matrix.partition }}/docker-compose.yml

      - name: Run Services with Docker Compose for Partition ${{ matrix.partition }}
        working-directory: ./services/partition-${{ matrix.partition }}
        run: |
          docker-compose up -d --quiet-pull --wait --wait-timeout 300

      - name: Start Portal for Partition ${{ matrix.partition }}
        working-directory: ./interfaces/Portal
        env:
          NG_URL_121_SERVICE_API: http://localhost:3000/api
        run: |
          npm install
          npm run start:debug-production > portal-server-logs-${{ matrix.partition }}.txt 2>&1 &

      - name: Install 121-Service dependencies
        working-directory: ./services/121-service
        run: |
          npm install

      - name: Install E2E-Tests runtime-dependencies
        working-directory: ${{ env.e2eTestsPath }}
        run: |
          npx playwright install chromium --with-deps

      - name: Wait for Portal for Partition ${{ matrix.partition }}
        run: |
          timeout 90s sh -c 'until curl http://localhost:8088 -I; do echo "Waiting for the Portal to be running..."; sleep 1; done'

      - name: Run E2E-Tests with Playwright for Partition ${{ matrix.partition }}
        working-directory: ${{ env.e2eTestsPath }}
        env:
          BASE_URL: http://localhost:8088
        run: |
          npx playwright test --project=chromium tests/partition${{ matrix.partition }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-result-artifacts-${{ matrix.partition }}
          path: |
            ${{ env.e2eTestsPath }}/test-results/
            ./interfaces/Portal/portal-server-logs-${{ matrix.partition }}.txt
          retention-days: 30

      - name: Docker logs for Partition ${{ matrix.partition }}
        if: always()
        uses: jwalton/gh-docker-logs@v2
