# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: 'Deploy [demo] Interface: Portal'

env:
  workingDirectory: interfaces/Portalicious

permissions:
  actions: read
  deployments: write

on:
  workflow_call:
    secrets:
      AZURE_STATIC_WEB_APPS_API_TOKEN_PORTAL:
        required: true
      LOKALISE_API_TOKEN:
        required: true
  workflow_dispatch:

jobs:
  build_and_deploy:
    name: Build and Deploy Job
    runs-on: ubuntu-latest
    environment: 'client-demo'
    env:
      NG_ENV_NAME: ${{ vars.NG_ENV_NAME }}
      NG_ENV_ICON: ${{ vars.NG_ENV_ICON }}
      NG_LOCALES: ${{ vars.NG_LOCALES }}
      NG_DEFAULT_LOCALE: ${{ vars.NG_DEFAULT_LOCALE }}
      NG_URL_121_SERVICE_API: ${{ vars.NG_URL_121_SERVICE_API }}
      USE_IN_TWILIO_FLEX_IFRAME: ${{ vars.USE_IN_TWILIO_FLEX_IFRAME }}
      USE_POWERBI_DASHBOARDS: ${{ vars.USE_POWERBI_DASHBOARDS }}
      USE_SSO_AZURE_ENTRA: ${{ vars.USE_SSO_AZURE_ENTRA }}
      AZURE_ENTRA_CLIENT_ID: ${{ vars.AZURE_ENTRA_CLIENT_ID }}
      AZURE_ENTRA_TENANT_ID: ${{ vars.AZURE_ENTRA_TENANT_ID }}
      AZURE_ENTRA_URL: ${{ vars.AZURE_ENTRA_URL }}
      APPLICATIONINSIGHTS_CONNECTION_STRING: ${{ vars.APPLICATIONINSIGHTS_CONNECTION_STRING }}
      MATOMO_CONNECTION_STRING: ${{ vars.MATOMO_CONNECTION_STRING }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Interface
        id: build
        uses: ./.github/actions/build-interface
        env:
          NG_DOWNLOAD_TRANSLATIONS_AT_BUILD: ${{ vars.NG_DOWNLOAD_TRANSLATIONS_AT_BUILD }}
          LOKALISE_PROJECT_ID: ${{ vars.LOKALISE_PROJECT_ID }}
          LOKALISE_API_TOKEN: ${{ secrets.LOKALISE_API_TOKEN }}
        with:
          interfacePath: ${{ env.workingDirectory }}
          buildType: 'portalicious'
          envIcon: ${{ env.NG_ENV_ICON }}
          envIconPath: 'src/assets/favicon.ico'
          envContentSecurityPolicy: '' # Not used for Portalicious, the `build:deployment-configuration`-script is used.

      # More information on Static Web App workflow configurations,
      # See: https://aka.ms/swaworkflowconfig
      - name: Deploy to Azure Static Web App
        id: deploy_to_aswa
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_PORTAL }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          config_file_location: '${{ env.workingDirectory }}/'
          app_location: '${{ env.workingDirectory }}/www'
          output_location: ''
          skip_app_build: true
          skip_api_build: true

      - name: Verify Deployment
        if: steps.deploy_to_aswa.outputs.static_web_app_url != ''
        working-directory: ${{ env.workingDirectory }}
        run: |
          npm run verify:deployment-configuration -- --url=${{ steps.deploy_to_aswa.outputs.static_web_app_url }}

      - name: Finish
        run: |
          echo "Build version: ${{ steps.build.outputs.build_version }}" >> $GITHUB_STEP_SUMMARY
          echo "Preview: <${{ steps.deploy_to_aswa.outputs.static_web_app_url }}>" >> $GITHUB_STEP_SUMMARY
