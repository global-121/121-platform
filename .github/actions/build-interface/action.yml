# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
# More specific about composite actions: https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions

name: 'Build: Interface'
description: 'Builds an Angular interface.'

inputs:
  interfacePath:
    description: Location of the interface's code. (relative to the repository-root)
    required: true
  envIcon:
    description: Base-64 encoded version of the favicon.ico file.
    required: false
    default: ''
  envIconPath:
    description: Path of where the favicon.ico file should be saved.
    required: false
    default: 'src/favicon.ico'
  envContentSecurityPolicyBase:
    description: Value of a 'baseline' Content-Security-Policy to use. (all non-enviroment-specific) (All lines should end with a ";"!)
    required: false
    default: >-
      base-uri 'self';
      default-src 'self';
      script-src 'self';
      style-src 'self' 'unsafe-inline';
      object-src 'none';
      upgrade-insecure-requests;
      block-all-mixed-content;
  envContentSecurityPolicy:
    description: Value of the environment-specific Content-Security-Policy to __not override__, but __append to__ the base. (All lines should end with a ";"!)
    required: false
    default: >-
      connect-src 'self' https://*.121.global https://*.in.applicationinsights.azure.com https://westeurope.livediagnostics.monitor.azure.com https://login.microsoftonline.com;
      form-action https://*.121.global;
      frame-src blob: 'self';
      frame-ancestors 'self';

outputs:
  build_version:
    description: Specific version of the build interface.
    value: ${{ steps.version.outputs.build_version }}

runs:
  using: composite
  steps:
    - name: Set up Node.js version
      uses: actions/setup-node@v4
      with:
        node-version-file: '${{ inputs.interfacePath }}/.node-version'
        cache: 'npm'
        cache-dependency-path: '${{ inputs.interfacePath }}/package-lock.json'

    - name: Install
      shell: bash
      working-directory: ${{ inputs.interfacePath }}
      env:
        HUSKY: '0'
      run: 'npm ci --no-fund --no-audit'

    - name: Set VERSION of build/deployment
      shell: bash
      run: |
        echo "NG_BUILD_VERSION=$(git describe --tags --dirty --broken)" >> $GITHUB_ENV

    - name: Add environment-specific icon
      if: ${{ inputs.envIcon }} != ''
      shell: bash
      working-directory: ${{ inputs.interfacePath }}
      run: |
        echo "${{ inputs.envIcon }}" | base64 --decode > ${{ inputs.envIconPath }}

    - name: Build
      shell: bash
      working-directory: ${{ inputs.interfacePath }}
      run: 'npm run build:prod'
      env:
        NG_PRODUCTION: 'true'
        NG_ENV_NAME: ${{ env.NG_ENV_NAME }}
        NG_URL_121_SERVICE_API: ${{ env.NG_URL_121_SERVICE_API }}
        NG_TWILIO_ERROR_CODES_URL: 'https://www.twilio.com/docs/api/errors'
        NG_AI_IKEY: ${{ env.NG_AI_IKEY }}
        NG_AI_ENDPOINT: ${{ env.NG_AI_ENDPOINT }}
        APPLICATIONINSIGHTS_CONNECTION_STRING: ${{ env.APPLICATIONINSIGHTS_CONNECTION_STRING }}

    - name: Add/Override environment-specific Content-Security-Policy
      if: ${{ inputs.envContentSecurityPolicy }} != ''
      shell: bash
      working-directory: ${{ inputs.interfacePath }}
      run: |
        jq --arg csp "$(echo -n "${{ inputs.envContentSecurityPolicyBase }} ${{ inputs.envContentSecurityPolicy }}" | sed "s/'/\\'/g")" '.globalHeaders["Content-Security-Policy"]=$csp' staticwebapp.config.json > staticwebapp.config.override.json
        mv -f ./staticwebapp.config.override.json ./staticwebapp.config.json
        cat ./staticwebapp.config.json

    - name: Add VERSION to deployment
      id: version
      shell: bash
      working-directory: ${{ inputs.interfacePath }}
      run: |
        echo "${{ env.NG_BUILD_VERSION }}" >> www/VERSION.txt
        echo '{"schemaVersion": 1,"label":"build","message":"${{ env.NG_BUILD_VERSION }}"}' >> www/VERSION.json
        echo "build_version=${{ env.NG_BUILD_VERSION }}" >> $GITHUB_OUTPUT

    - name: Output build contents
      shell: bash
      working-directory: ${{ inputs.interfacePath }}
      run: |
        ls -la www/
