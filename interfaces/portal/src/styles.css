@import 'tailwindcss';
@import 'primeicons/primeicons.css';

@config "../tailwind.config.ts";

@theme {
  --heading-size-1: 1.43rem; /* ~20px */
  --heading-size-2: 1.28rem; /* ~18px */
  --heading-size-3: 1.15rem; /* ~16px */

  --typography-size-s: 0.85rem; /* ~12px */
  --typography-size-m: 1rem; /* ~14px */
  --typography-size-l: 1.85rem; /* ~26px */

  --typography-line-height-s: 120%;
  --typography-line-height-m: 140%;
  --typography-line-height-l: 140%;

  --font-display: 'Montserrat', sans-serif;
  --font-body: 'Open Sans', sans-serif;
  --font-mono: monospace;
}

@utility txt-h-* {
  font-size: --value(--heading-size-*);
  font-family: var(--font-display);
  line-height: 140%;
}

@utility txt-body-* {
  font-size: --value(--typography-size-*);
  font-family: var(--font-body);
  line-height: --value(--typography-line-height-*);
  letter-spacing: 0px;
}

@utility txt-system-* {
  font-size: --value(--typography-size-*);
  font-family: var(--font-display);
  line-height: 140%;
  letter-spacing: 0px;
  font-weight: 500;
}

@utility txt-system-bold-* {
  font-size: --value(--typography-size-*);
  font-family: var(--font-display);
  line-height: 140%;
  letter-spacing: 0px;
  font-weight: 700;
}

html {
  font-size: calc(14 / 16 * 1rem);
}

body {
  @apply bg-grey-100 font-body text-black;
}

:root {
  /* primeng uses this variable on all of its components by default
     and it does not work if we set it within the 'primeng' layer */
  --font-family: var(--font-body);
}

/* Styles only for "local-development" purposes:
   Classname is set on <html> by the AppComponent. */
.dev {
  /* Override *-left/*-right named utilities to enforce use of *-start/*-end utilities */
  [class*='-left']:not(.p-button-icon-left):not(.p-drawer-left):not(
      .p-toast-top-left
    ):not(.p-tooltip-left):not(.pi-chevron-left):not(.p-iconfield-left),
  [class*='-right']:not(.p-button-icon-right):not(.p-drawer-right):not(
      .p-toast-top-right
    ):not(.p-tooltip-right):not(.pi-chevron-right):not(.p-iconfield-right),
  [class*='left-'],
  [class*='right-'],
  [class*='pr-'],
  [class*='pl-'],
  [class*='ml-'],
  [class*='mr-'] {
    &::before {
      content: '⚠️ Use -end/-start, not -right/-left!';
      font-weight: bold;
      color: red;
    }
    outline: 2px dashed hotpink;
    margin-right: unset !important;
    margin-left: unset !important;
    padding-right: unset !important;
    padding-left: unset !important;
  }
}

svg-icon svg {
  fill: currentColor;
}

@layer tailwind-base {
  h1 {
    @apply txt-h-1 font-bold;
  }

  h2 {
    @apply txt-h-2 font-bold;
  }

  h3 {
    @apply txt-h-3 font-bold;
  }

  strong,
  b {
    @apply font-semibold;
  }

  p a {
    @apply text-blue-500 underline;

    &:hover,
    &:focus {
      @apply no-underline;
    }
  }
}

.mention-menu {
  @apply shadow-menu;

  li {
    .mention-item {
      @apply txt-body-m !py-2 text-start font-semibold !text-black;
    }

    &.mention-active {
      @apply bg-purple-100;

      a {
        background: inherit !important;
      }
    }
  }

  /* Move the menu from the hard-coded LTR-position to the RTL reading-direction */
  &:dir(rtl) {
    transform: translateX(-100%);
  }
}

/* PrimeNG Component overrides */

/* Rule-of-thumb: Override only from any specific component class-name(i.e. `.p-component-X`) 'down'.
   Following the pattern:

   .p-component-X {
     .p-component-X-element {
       // Override styles here
     }
   }

   So there will only be ONE section/grouping per PrimeNG component.
*/
@layer primeng-customisations {
  :root {
    --toolbar-height: calc(48 / 14 * 1rem);
  }

  .p-button {
    .p-button-label {
      @apply txt-system-bold-m;
    }

    &.p-button-sm .p-button-label {
      @apply txt-system-bold-s;
    }

    &.p-button-link {
      @apply text-purple p-0 underline;

      .p-button-label {
        @apply font-normal;
      }

      &:hover {
        @apply no-underline;

        .p-button-label {
          @apply no-underline;
        }
      }

      p & {
        @apply text-blue-500;
      }
    }

    &.p-button-outlined {
      &:not(:hover):not(:focus):not(:focus-within) {
        @apply bg-white;
      }
    }

    &.p-button-text {
      @apply rounded-full;

      &:hover {
        @apply bg-grey-100 text-purple;
      }
    }
  }

  .p-buttongroup {
    p-button:not(:first-child) .p-button-rounded {
      @apply ps-4;
    }
    p-button:not(:last-child) .p-button-rounded {
      @apply pe-4;
    }
  }

  .p-card {
    @apply text-black;

    .p-card-title {
      @apply txt-h-2 ps-2 pb-2 font-bold text-black;
    }
  }

  .p-drawer {
    color: inherit;

    .p-drawer-header {
      @apply ps-3;
      height: calc(var(--toolbar-height) - 2px);

      .p-drawer-icon {
        margin-inline-start: 0;
        height: 33px;
        width: 33px;
      }
    }

    .p-drawer-content {
      padding-inline-start: 0;
      padding-inline-end: 0;
    }
  }

  .p-toolbar {
    @apply border-b-purple bg-navy rounded-none border-x-0 border-t-0 py-0;
    height: var(--toolbar-height);
    flex-wrap: nowrap !important;

    .p-toolbar-group-start {
      white-space: nowrap;
      overflow: hidden;
    }
  }

  .p-datatable {
    .p-datatable-header {
      @apply px-0 pt-0 pb-4;
    }

    .p-paginator {
      @apply border-b-0 pt-4 pb-0;

      .p-paginator-current {
        @apply txt-system-s ms-0 me-auto ps-0;
      }
    }

    .p-datatable-thead > tr > th {
      @apply bg-grey-50 text-black;
      padding: 0.625rem 1rem;
    }

    .p-datatable-sortable-column {
      &:not(.p-datatable-column-sorted),
      &.p-datatable-column-sorted {
        @apply bg-grey-50 text-black;

        &:hover,
        &:focus-within {
          @apply text-purple bg-purple-100;
        }
      }

      &.p-datatable-column-sorted {
        .p-sortable-column-icon {
          @apply text-purple;
        }
      }
    }

    /* Styling for the filter button when active
       Currently broken: https://github.com/primefaces/primeng/issues/16576
       .p-datatable-column-filter-button.p-column-filter-menu-button-active,
       .p-datatable-column-filter-button.p-column-filter-menu-button-active:hover,
       .p-datatable-column-filter-button.p-column-filter-menu-button-active:focus {
         @apply bg-purple-100 text-purple-900;
       } */
  }

  .p-chip {
    .p-chip-icon {
      color: inherit;
    }

    .p-chip-label {
      @apply txt-body-m font-semibold;
    }
  }

  .p-tab {
    @apply flex items-center;
  }

  /* All form-inputs should be full-width, a wrapper should be in control of the width. */
  .p-password,
  .p-select,
  .p-multiselect {
    @apply w-full;

    .p-select-overlay,
    .p-multiselect-overlay {
      @apply max-w-full;
    }

    .p-paginator & {
      @apply w-auto;
    }
  }

  .p-password {
    .p-password-input {
      @apply font-mono; /* Improve readability and spot typos between similar characters (o,O,0 or i,l,L,1 etc.) */
    }

    .p-password-toggle-mask-icon .p-icon {
      @apply text-black;
    }
  }

  .p-multiselect {
    /* Prevent contents being cut off, always wrap and align checkboxes to the top */
    .p-multiselect-option {
      @apply items-start text-wrap;
    }
  }
  /* To be able to remove this rule we need to be able to mark all form fields as "dirty" instead of "touched" on form submit
     Waiting for this to be merged & released in angular: https://github.com/angular/angular/pull/58663#issuecomment-2476844180 */
  .p-inputwrapper,
  .p-textarea,
  .p-checkbox-box,
  .p-inputtext {
    &.ng-touched.ng-invalid,
    [formcontrolname].ng-touched.ng-invalid & {
      @apply !border-red-500;
    }
  }

  .p-contextmenu,
  .p-menu {
    .p-menu-item-label {
      @apply txt-body-m;
    }
  }

  .p-fileupload.p-fileupload-advanced {
    @apply border-grey-500 rounded-[16px] border border-dashed;

    .ng-touched.ng-invalid & {
      @apply border-red-500;
    }

    .p-fileupload-header,
    p-progressbar {
      display: none;
    }

    .p-fileupload-filename,
    .p-fileupload-filename + div {
      @apply txt-system-s;
    }

    .p-fileupload-filename ~ * {
      @apply grow-0;
    }
  }

  .p-progressspinner {
    --p-progressspinner-color-1: var(--color-purple-700);
    --p-progressspinner-color-2: var(--color-purple-700);
    --p-progressspinner-color-3: var(--color-purple-700);
    --p-progressspinner-color-4: var(--color-purple-700);
  }

  .p-toast {
    .p-toast-close-button {
      @apply text-grey-700;
    }
  }

  .p-tooltip-text {
    @apply txt-body-s;
  }
}
