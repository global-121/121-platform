@layer tailwind-base, primeng, tailwind-utilities;

// Please take note of the order in which these are imported
@import 'tailwindcss/base.css' layer(tailwind-base);

@import 'primeng/resources/primeng.css';
@import 'primeng/resources/themes/aura-light-blue/theme.css';
@import 'primeicons/primeicons.css';

@import 'tailwindcss/components.css' layer(tailwind-utilities);
@import 'tailwindcss/utilities.css' layer(tailwind-utilities);

html {
  font-size: calc(14 / 16 * 1rem);
}

body {
  @apply bg-grey-100 font-body text-black;
  overflow-y: scroll; /* Always show scrollbars to avoid page skipping about */
}

:root {
  // primeng uses this variable on all of its components by default
  // and it does not work if we set it within the 'primeng' layer
  --font-family: theme(fontFamily.body);
}

@layer tailwind-base {
  h1 {
    @apply font-bold txt-h-1;
  }

  h2 {
    @apply font-bold txt-h-2;
  }

  h3 {
    @apply font-bold txt-h-3;
  }

  label {
    @apply font-semibold;
  }

  strong,
  b {
    @apply font-semibold;
  }

  p a {
    @apply text-blue-500;
    @apply underline;
  }
}

.mention-menu {
  box-shadow: 0px 2px 12px 0px #0000001a;

  li {
    .mention-item {
      @apply py-2 font-semibold text-black txt-body-m #{!important};
    }

    &.mention-active {
      @apply bg-purple-100;

      a {
        background: inherit !important;
      }
    }
  }
}

// PrimeNG Component overrides
//
// For now we're just overriding some defaults here instead of extending the whole theme,
// while we wait for PrimeNG v18 to be released with the new theming system.
//
// Rule-of-thumb: Override only from any specific component class-name(i.e. `.p-component-X`) 'down'.
// Following the pattern:
//
// .p-component-X {
//   .p-component-X-element {
//     // Override styles here
//   }
// }
//
// So there will only be ONE section/grouping per PrimeNG component.
//
@layer primeng {
  $toolbar-height: calc(48 / 14 * 1rem);

  .p-button {
    .p-button-label {
      @apply txt-system-bold-m;
    }

    &.p-button-sm {
      @apply txt-system-s;
    }

    &.p-button-link {
      @apply p-0;
    }
  }

  .p-card {
    @apply text-black;

    .p-card-title {
      @apply text-black txt-h-2;
    }
  }

  .p-tabmenu {
    // The ink bar is manually positioned via the 'left' property, but it is broken on page load.
    // These two rules fix the issue by hiding the ink bar and overriding the default behaviour of the selected tab.
    .p-tabmenu-ink-bar {
      display: none;
    }
    .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link {
      @apply border-purple-700 text-purple-700;
    }
  }

  .p-sidebar {
    color: inherit;

    .p-sidebar-header {
      @apply pl-3;
      height: $toolbar-height - 2;

      .p-sidebar-icon {
        margin-inline-start: 0;
        height: 33px;
        width: 33px;
      }
    }

    .p-sidebar-content {
      padding-inline-start: 0;
      padding-inline-end: 0;
    }
  }

  .p-toolbar {
    @apply rounded-none border-x-0 border-t-0 border-b-purple bg-navy py-0;
    height: $toolbar-height;
    flex-wrap: nowrap !important;

    .p-toolbar-group-start {
      white-space: nowrap;
      overflow: hidden;
    }
  }

  .p-toast {
    .p-toast-message-content {
      border: none; // Hide the 'thick' border, the box-shadow alone is enough emphasis
    }
  }

  .p-datatable {
    // Apply these styles ONLY when the table is INSIDE a Card
    .p-card & {
      .p-datatable-header {
        @apply px-0 pb-4 pt-0;
      }

      .p-paginator {
        @apply border-b-0 pb-0 pt-4;

        .p-paginator-current {
          @apply me-auto ms-0 ps-0 txt-system-s;
        }
      }
    }

    .p-datatable-thead > tr > th {
      @apply bg-grey-50 text-black;
    }

    .p-sortable-column {
      &:not(.p-highlight),
      &.p-highlight {
        @apply bg-grey-50 text-black;

        &:hover,
        &:focus-within {
          @apply bg-purple-100 text-purple-700;
        }
      }

      &.p-highlight {
        .p-sortable-column-icon {
          @apply text-purple-700;
        }
      }
    }

    .p-column-filter-menu-button.p-column-filter-menu-button-active,
    .p-column-filter-menu-button.p-column-filter-menu-button-active:hover,
    .p-column-filter-menu-button.p-column-filter-menu-button-active:focus {
      @apply bg-purple-100 text-purple-700;
    }
  }

  .p-chip .p-chip-text {
    @apply font-semibold txt-body-m;
  }

  // All form-inputs should be full-width, a wrapper should be in control of the width.
  .p-password,
  .p-dropdown,
  .p-multiselect {
    @apply w-full;

    .p-dropdown-panel,
    .p-multiselect-panel {
      @apply max-w-full;
    }
  }

  .p-password {
    .p-password-input {
      @apply font-mono; // Improve readability and spot typos between similar characters (o,O,0 or i,l,L,1 etc.)
    }
  }

  .p-multiselect {
    // Prevent contents being cut off, always wrap and align checkboxes to the top
    .p-multiselect-item {
      @apply items-start text-wrap;
    }
  }

  .p-element.ng-touched.ng-invalid {
    .p-inputwrapper,
    .p-inputtext,
    &.p-inputtext,
    &.p-inputtextarea {
      border-color: theme('colors.red.500') !important;
    }
  }
}
