
# ------------------------------
# Environment/Instance specifics
# ------------------------------
# (Optional) A human-readable label for the environment.
# For example `Local DEV` or `Staging Pilot A`
# Note: Also used in Mock-Service
ENV_NAME=DEV

# (Optional) The URL(can be a data-URI) of an icon to use as 'favicon' for the environment.
# Use a generator like: <https://shoonia.github.io/1x1/>
# Or covert using: <https://rodekruis.github.io/browser-tools/image-to-data-url/>
# Note: Also used in Mock-Service
ENV_ICON=

# (Required) Setting of the Node.js mode.
# Allowed values: `development`, `test`, `production`(=required for production)
# Note: Also used in Mock-Service
NODE_ENV=development

# (Optional) Name used in Docker Desktop (for use in local development only)
# Uncomment when starting from a clean slate only.
#COMPOSE_PROJECT_NAME=global-121-platform

# ----------
# API set up
# ----------
# Specify port-number for the 121-service API.
# Example values: `8080` for production, use `3000` for local development.
# Note: Also used in Mock-Service
PORT_121_SERVICE=3000

# Specify port-number for the Mock-Service API.
# Example values: `8080` for production, use `3001` for local development.
# Note: Also used in Mock-Service
PORT_MOCK_SERVICE=3001

# External (public) URL of the API. (Should include a trailing slash!)
# For example: `https://instance-name.example.org/`
# Note: Also used in Mock-Service
EXTERNAL_121_SERVICE_URL=http://localhost:3000/

# API Access rate-limits.
# Provided values are set high for local development/testing.
# Generic throttling is applied to all requests.
GENERIC_THROTTLING_TTL=
GENERIC_THROTTLING_LIMIT=1000
# High throttling is applied to endpoints that should not be brute-forced like login.
HIGH_THROTTLING_TTL=
HIGH_THROTTLING_LIMIT=300


# --------
# Database
# --------
# Hostname of the database(-service). Use "121db" as the hostname for local development using Docker.
POSTGRES_HOST=121db
POSTGRES_PORT=5432
# Any value(s) can be used for local development. Use unique/secure values for production.
POSTGRES_USER=global121
POSTGRES_PASSWORD=global121
POSTGRES_DBNAME=global121


# --------
# Redis
# --------
# Redis connection details for queueing with Bull
# For development, use the name of the docker-container (e.g. `121-redis`)
# For production, use the connection to Azure Cache for Redis
REDIS_HOST=121-redis
# For local development, use `6379`, for remote connections use `6380`
REDIS_PORT=6379
# You can keep the password empty for local development
REDIS_PASSWORD=
# For local development you can set it to anything for production set it to a human readable string like the ENV_NAME
# Do not use special characters like spaces, quotes or semicolons
REDIS_PREFIX=dev_


# ---------------
# Data management
# ---------------
# To enable a full reset of the database via an API-endpoint a secret is required.
# Make sure to use a unique/long/secure secret. (i.e. 42+ (special)characters+numbers etc.)
RESET_SECRET=fill_in_secret

# Secret key used to sign/verify JWT-tokens of user-accounts.
# Make sure to use a unique/long/secure secret. (i.e. 42+ (special)characters+numbers etc.)
SECRETS_121_SERVICE_SECRET=121_service_secret


# -----------------
# Access management
# -----------------

# To enable single-sign-on via Azure Entra ID, use: `TRUE` to enable, leave empty or out to disable.
USE_SSO_AZURE_ENTRA=

# Azure Entra environment-specific IDs.
# Make sure to also set these values for the Portal.
AZURE_ENTRA_CLIENT_ID=
AZURE_ENTRA_TENANT_ID=


# ---------------------
# Default User-accounts
# ---------------------

# This will be the first user created with the ability to create other users.
# Make sure to use a unique/long/secure password. (i.e. 42+ (special)characters+numbers etc.)
# If you are developing locally, with USE_SSO_AZURE_ENTRA in interfaces/Portal/.env you could use the same email address as your microsoft account
# and than locally you can login with your microsoft account.
# Note: Also used in Mock-Service
USERCONFIG_121_SERVICE_EMAIL_ADMIN=admin@example.org
USERCONFIG_121_SERVICE_PASSWORD_ADMIN=password

# Additional pre-set user-accounts:
# Can be left empty when using the API to create users.
# Some seed-scripts require these values to be set.
USERCONFIG_121_SERVICE_EMAIL_PROGRAM_ADMIN=program-admin@example.org
USERCONFIG_121_SERVICE_PASSWORD_PROGRAM_ADMIN=password

USERCONFIG_121_SERVICE_EMAIL_USER_VIEW=view-user@example.org
USERCONFIG_121_SERVICE_PASSWORD_USER_VIEW=password

USERCONFIG_121_SERVICE_EMAIL_USER_KOBO=kobo-user@example.org
USERCONFIG_121_SERVICE_PASSWORD_USER_KOBO=password

USERCONFIG_121_SERVICE_EMAIL_CVA_MANAGER=cva-manager@example.org
USERCONFIG_121_SERVICE_PASSWORD_CVA_MANAGER=password

USERCONFIG_121_SERVICE_EMAIL_CVA_OFFICER=cva-officer@example.org
USERCONFIG_121_SERVICE_PASSWORD_CVA_OFFICER=password

USERCONFIG_121_SERVICE_EMAIL_FINANCE_MANAGER=finance-manager@example.org
USERCONFIG_121_SERVICE_PASSWORD_FINANCE_MANAGER=password

USERCONFIG_121_SERVICE_EMAIL_FINANCE_OFFICER=finance-officer@example.org
USERCONFIG_121_SERVICE_PASSWORD_FINANCE_OFFICER=password

USERCONFIG_121_SERVICE_EMAIL_VIEW_WITHOUT_PII=view-no-pii@example.org
USERCONFIG_121_SERVICE_PASSWORD_VIEW_WITHOUT_PII=password

# --------------------------
# Interface(s) configuration
# --------------------------

# (Optional) Interface (redirect) URLs: (Should NOT include a trailing slash!)
# For example: `https://portal.instance-name.example.org`
REDIRECT_PORTAL_URL_HOST=


# ----------------------------------------
# Third-party: Testing / Local development
# ----------------------------------------
# For local development, use: `http://mock-service:3001/` (Should include a trailing slash!)
MOCK_SERVICE_URL=http://mock-service:3001/

# ---------------------------------------
# Third-party: Azure Application-Insights
# ---------------------------------------
# (Optional) This can be found on the "Overview / Essentials"-section of the Azure Application Insights resource in Azure portal.
APPLICATIONINSIGHTS_CONNECTION_STRING=
# (Optional) These separate variables are required (but will be phased out)
APPLICATION_INSIGHT_IKEY=
APPLICATION_INSIGHT_ENDPOINT=


# -------------------
# Third-party: Twilio
# -------------------
# See: https://www.twilio.com/docs/iam/test-credentials
# (Required) These 2 need to have a value, even when using MOCK_TWILIO=TRUE
TWILIO_SID=ACdevelopment
TWILIO_AUTHTOKEN=development-auth-token
# For local development, use: `15005550006`
TWILIO_WHATSAPP_NUMBER=15005550006
TWILIO_MESSAGING_SID=MG
# For development/debugging purposes, see: https://github.com/twilio/twilio-node#enable-debug-logging
# TWILIO_LOG_LEVEL=debug
# To use a mock version of the Twilio API, use: TRUE to enable, leave empty or out to disable.
MOCK_TWILIO=TRUE


# -------------------------
# Third-party: Kobo Connect
# -------------------------
# (Required) Converts Kobo/ODK-forms to a format that can be used by the platform. (Should NOT include a trailing slash!)
KOBO_CONNECT_API_URL=https://kobo-connect.azurewebsites.net


# ---------------------------
# Third-party FSP: Intersolve
# ---------------------------
# Used for intersolve vouchers
# (Required) INTERSOLVE_USERNAME & INTERSOLVE_PASSWORD need to have a value, even when using MOCK_INTERSOLVE=TRUE
INTERSOLVE_AUTH_TOKEN=
INTERSOLVE_PRODUCT_CODE=
INTERSOLVE_PACKAGE_CODE=
INTERSOLVE_USERNAME=test-INTERSOLVE_USERNAME
INTERSOLVE_PASSWORD=test-INTERSOLVE_PASSWORD
INTERSOLVE_EAN=
INTERSOLVE_URL=

# Intersolve Visa
# Set INTERSOLVE_VISA_PROD to 1 to use the production environment, leave empty to use the test environment.
INTERSOLVE_VISA_PROD=
INTERSOLVE_VISA_OIDC_ISSUER=
INTERSOLVE_VISA_API_URL=
INTERSOLVE_VISA_CLIENT_ID=
INTERSOLVE_VISA_CLIENT_SECRET=
INTERSOLVE_VISA_COVERLETTER_CODE=test_INTERSOLVE_VISA_COVERLETTER_CODE
# (Required in 121-service & Mock-Service) INTERSOLVE_VISA_ASSET_CODE needs to have a value, even when using MOCK_INTERSOLVE=TRUE
INTERSOLVE_VISA_ASSET_CODE=test-INTERSOLVE_VISA_ASSET_CODE
INTERSOLVE_VISA_TENANT_ID=

# Sync data automatically with third parties (now only used for Intersolve Visa)
# Use: `TRUE` to enable, leave empty or out to disable.
SYNC_WITH_THIRD_PARTIES=

# To use a mock version of the Intersolve API, use: `TRUE` to enable, leave empty or out to disable.
MOCK_INTERSOLVE=TRUE

# ---------------------
# Third-party FSP: VodaCash
# ---------------------
# To use a mock version of the Vodacash API, use: `TRUE` to enable, leave empty or out to disable.
MOCK_VODACASH=TRUE

# ----------------------
# Third-party FSP: SafariCom
# ----------------------
SAFARICOM_CONSUMER_KEY=
SAFARICOM_CONSUMER_SECRET=
SAFARICOM_API_URL=
SAFARICOM_B2C_PAYMENTREQUEST_ENDPOINT=
SAFARICOM_INITIATORNAME=
SAFARICOM_SECURITY_CREDENTIAL=
SAFARICOM_PARTY_A=
SAFARICOM_IDTYPE=
# To use a mock version of the Safaricom API, use: `TRUE` to enable, leave empty or out to disable.
MOCK_SAFARICOM=TRUE


# ----------------
# Third-party FSP: CBE
# ----------------
COMMERCIAL_BANK_ETHIOPIA_URL=
# To use a mock version of the COMMERCIAL BANK ETHIOPIA API, use: `TRUE` to enable, leave empty or out to disable.
MOCK_COMMERCIAL_BANK_ETHIOPIA=TRUE


# ---------------------------------------------------------------------
# END of ENV-configuration
# Make sure to store this file only temporary, or in a secure location!
# ---------------------------------------------------------------------

# Playwright configuration
AZURE_DEV_URL=https://dev.azure.com/redcrossnl
AZURE_DEVOPS_TOKEN=
BASE_URL=http://localhost:8088
