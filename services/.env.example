
# ------------------------------
# Environment/Instance specifics
# ------------------------------
# An optional human-readable label for the environment.
# For example `Local DEV` or `Staging Pilot A`
ENV_NAME=

# The URL(can be a data-URI) of an icon to use as 'favicon' for the environment.
# Use a generator like: <https://shoonia.github.io/1x1/>
# Or covert using: <https://rodekruis.github.io/browser-tools/image-to-data-url/>
ENV_ICON=

# Required setting of the Node.js mode.
# Allowed values: `development`, `test`, `production`(=required for production)
NODE_ENV=

# Optional name used in Docker Desktop (for use in local development only)
# Uncomment when starting from a clean slate only.
#COMPOSE_PROJECT_NAME=global-121-platform

# ----------
# API set up
# ----------
# Specify the URL-scheme for the API.
# Allowed values: `https` for production, use `http` for local development.
SCHEME=

# Specify port-number for the API.
# Allowed values: `8080` for production, use `3000` for local development.
PORT_121_SERVICE=

# External (public) URL of the API.
# For example: `https://instance-name.example.org/`
EXTERNAL_121_SERVICE_URL=

# API Access rate-limits.
# Generic throttling is applied to all requests.
GENERIC_THROTTLING_TTL=60
GENERIC_THROTTLING_LIMIT=300
# High throttling is applied to endpoints that should not be brute-forced like login.
HIGH_THROTTLING_TTL=60
HIGH_THROTTLING_LIMIT=30


# --------
# Database
# --------
# Use "121db" as the hostname for local development using Docker.
POSTGRES_HOST=
# Any value(s) can be used for local development. Use unique/secure values for production.
POSTGRES_USER=
POSTGRES_PASSWORD=
POSTGRES_DBNAME=


# --------
# Redis
# --------
# Redis connection details for queueing with Bull
# For development, use the name of the docker-container (e.g. `121-redis`)
# For production, use the connection to Azure Cache for Redis
REDIS_HOST=
# For local development, use 6379, for remote connections use 6380
REDIS_PORT=
# You can keep the password empty for local development
REDIS_PASSWORD=
# For local development you can set it to anything for production set it to a human readable string like the ENV_NAME
# Do not use special characters like spaces or quotes or semicolons
REDIS_PREFIX=


# ---------------
# Data management
# ---------------
# To enable a full reset of the database via an API-endpoint a secret is required.
# Make sure to use a unique/long/secure secret. (i.e. 42+ (special)characters+numbers etc.)
RESET_SECRET=

# Secret key used to sign/verify JWT-tokens of user-accounts.
# Make sure to use a unique/long/secure secret. (i.e. 42+ (special)characters+numbers etc.)
SECRETS_121_SERVICE_SECRET=


# ---------------------
# Default User-accounts
# ---------------------

# This will be the first user created with the ability to create other users.
# Make sure to use a unique/long/secure password. (i.e. 42+ (special)characters+numbers etc.)
USERCONFIG_121_SERVICE_EMAIL_ADMIN=admin@example.org
USERCONFIG_121_SERVICE_PASSWORD_ADMIN=password

# Additional pre-set user-accounts:
# Can be left empty when using the API to create users.
# Some seed-scripts require these values to be set.
USERCONFIG_121_SERVICE_EMAIL_USER_FIELD_VALIDATION=field-validation-user@example.org
USERCONFIG_121_SERVICE_PASSWORD_USER_FIELD_VALIDATION=password

USERCONFIG_121_SERVICE_EMAIL_USER_RUN_PROGRAM=run-program-user@example.org
USERCONFIG_121_SERVICE_PASSWORD_USER_RUN_PROGRAM=password

USERCONFIG_121_SERVICE_EMAIL_USER_PERSONAL_DATA=personal-data-user@example.org
USERCONFIG_121_SERVICE_PASSWORD_USER_PERSONAL_DATA=password

USERCONFIG_121_SERVICE_EMAIL_USER_FULL_ACCESS=full-access-user@example.org
USERCONFIG_121_SERVICE_PASSWORD_USER_FULL_ACCESS=password

USERCONFIG_121_SERVICE_EMAIL_USER_VIEW=view-user@example.org
USERCONFIG_121_SERVICE_PASSWORD_USER_VIEW=password

USERCONFIG_121_SERVICE_EMAIL_USER_KOBO=kobo-user@example.org
USERCONFIG_121_SERVICE_PASSWORD_USER_KOBO=password


# --------------------------
# Interface(s) configuration
# --------------------------

# Interface (redirect) URLs:
# Use URLs WITHOUT trailing slash(es)!
# For example: `https://portal.instance-name.example.org`
REDIRECT_PORTAL_URL_HOST=
# Register/Verify are optional
REDIRECT_REGISTER_URL_HOST=
REDIRECT_VERIFY_URL_HOST=


# ---------------------------------------
# Third-party: Azure Application-Insights
# ---------------------------------------
# This can be found on the "Overview / Essentials"-section of the Azure Application Insights resource in Azure portal.
APPLICATIONINSIGHTS_CONNECTION_STRING=
# These separate variables are required (but will be phased out)
APPLICATION_INSIGHT_IKEY=
APPLICATION_INSIGHT_ENDPOINT=

# -------------------
# Third-party: Twilio
# -------------------
# See: https://www.twilio.com/docs/iam/test-credentials
TWILIO_SID=
TWILIO_AUTHTOKEN=
TWILIO_WHATSAPP_NUMBER=
TWILIO_MESSAGING_SID=MG
# For development/debugging purposes, see: https://github.com/twilio/twilio-node#enable-debug-logging
# TWILIO_LOG_LEVEL=debug
# To use a mock version of the Twilio API, use: TRUE to enable, leave empty to disable.
MOCK_TWILIO=
# Use `http://twilio-mock-service:3001/` for local development
# Make sure to end with a slash
MOCK_TWILIO_URL=

# -----------------------
# Third-party: Intersolve
# -----------------------
# Used for intersolve vouchers
INTERSOLVE_AUTH_TOKEN=
INTERSOLVE_PRODUCT_CODE=
INTERSOLVE_PACKAGE_CODE=
INTERSOLVE_USERNAME=
INTERSOLVE_PASSWORD=
INTERSOLVE_EAN=
INTERSOLVE_URL=

# Intersolve Visa
# Set INTERSOLVE_VISA_PROD to 1 to use the production environment, leave empty to use the test environment.
INTERSOLVE_VISA_PROD=
INTERSOLVE_VISA_OIDC_ISSUER=
INTERSOLVE_VISA_API_URL=
INTERSOLVE_VISA_CLIENT_ID=
INTERSOLVE_VISA_CLIENT_SECRET=
INTERSOLVE_VISA_BRAND_CODE=
INTERSOLVE_VISA_ASSET_CODE=
INTERSOLVE_VISA_TENANT_ID=

# Intersolve Jumbo
INTERSOLVE_JUMBO_URL=
INTERSOLVE_JUMBO_USERNAME=
INTERSOLVE_JUMBO_PASSWORD=
INTERSOLVE_JUMBO_PRODUCT_CODE=
INTERSOLVE_JUMBO_PACKAGE_CODE=
INTERSOLVE_JUMBO_CUSTOMER_ID=

# Sync data automatically with third parties (now only used for Intersolve Visa)
# Use: `TRUE` to enable, leave empty or out to disable.
SYNC_WITH_THIRD_PARTIES=

# To use a mock version of the Intersolve API, use: `TRUE` to enable, leave empty to disable.
MOCK_INTERSOLVE=


# --------------------
# Third-party: BelCash
# --------------------
BELCASH_API_URL=
BELCASH_LOGIN=
BELCASH_API_TOKEN=
BELCASH_SYSTEM=


# ---------------------
# Third-party: VodaCash
# ---------------------
# To use a mock version of the Vodacash API, use: `TRUE` to enable, leave empty or out to disable.
MOCK_VODACASH=


# -----------------------------
# Third-party: Afrika's Talking
# -----------------------------
AFRICASTALKING_API_KEY=
AFRICASTALKING_USERNAME=
AFRICASTALKING_PRODUCT_NAME=
AFRICASTALKING_CURRENCY_CODE=
AFRICASTALKING_PROVIDER_CHANNEL=


# ----------------------
# Third-party: SafariCom
# ----------------------
SAFARICOM_CONSUMER_KEY=
SAFARICOM_CONSUMER_SECRET=
SAFARICOM_API_URL=
SAFARICOM_B2C_PAYMENTREQUEST_ENDPOINT=
SAFARICOM_INITIATORNAME=
SAFARICOM_SECURITY_CREDENTIAL=
SAFARICOM_PARTY_A=
SAFARICOM_IDTYPE=


# ----------------
# Third-party: CBE
# ----------------
COMMERCIAL_BANK_ETHIOPIA_URL=
# To use a mock version of the COMMERCIAL BANK ETHIOPIA API, use: `TRUE` to enable, leave empty or out to disable.
MOCK_COMMERCIAL_BANK_ETHIOPIA=


# ---------------------------------------------------------------------
# END of ENV-configuration
# Make sure to store this file only temporary, or in a secure location!
# ---------------------------------------------------------------------
